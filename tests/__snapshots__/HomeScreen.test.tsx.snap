// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HomeScreen 컴포넌트 렌더링이 올바르게 된다 1`] = `
<RCTScrollView
  style={
    Array [
      Object {
        "paddingBottom": 20,
        "paddingLeft": 20,
        "paddingRight": 20,
        "paddingTop": 20,
      },
    ]
  }
>
  <View>
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      nativeID="animatedComponent"
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "flex-start",
          "opacity": 1,
          "paddingBottom": 0,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 0,
        }
      }
    />
    <RCTScrollView
      activeAnimationOptions={null}
      activeAnimationType="timing"
      activeSlideAlignment="center"
      activeSlideOffset={20}
      apparitionDelay={0}
      automaticallyAdjustContentInsets={false}
      autoplay={false}
      autoplayDelay={1000}
      autoplayInterval={3000}
      callbackOffsetMargin={5}
      containerCustomStyle={Object {}}
      contentContainerCustomStyle={Object {}}
      contentContainerStyle={
        Array [
          Object {
            "paddingLeft": 0,
            "paddingRight": 0,
          },
          Object {},
        ]
      }
      data={
        Array [
          <Styled(LinearGradient)
            colors={
              Array [
                "#2687ED",
                "#ca71eb",
              ]
            }
            end={
              Object {
                "x": 1,
                "y": 1,
              }
            }
            start={
              Object {
                "x": 0,
                "y": 0,
              }
            }
          >
            <Styled(View)>
              <View>
                <Memo(Text)
                  color="white"
                  weight="bold"
                >
                  나의 3대 측정
                </Memo(Text)>
                <Styled(View)>
                  <Memo(Icon)
                    color="white"
                    name="calendar-today"
                    size={16}
                  />
                  <Styled(Component)
                    color="white"
                    size={12}
                  >
                    21\`11.16
                  </Styled(Component)>
                </Styled(View)>
              </View>
            </Styled(View)>
            <Styled(View)>
              <Memo(Text)
                color="white"
                weight="bold"
              >
                로그인 한 후에 확인할 수 있어요!
              </Memo(Text)>
              <Styled(Component)
                color="white"
                onPress={[Function]}
                size={12}
                title="로그인 하러가기"
                type="outline"
              />
            </Styled(View)>
          </Styled(LinearGradient)>,
        ]
      }
      decelerationRate="fast"
      directionalLockEnabled={true}
      enableMomentum={false}
      enableSnap={true}
      firstItem={0}
      forwardedRef={[Function]}
      getItem={[Function]}
      getItemCount={[Function]}
      hasParallaxImages={false}
      horizontal={true}
      inactiveSlideOpacity={0.7}
      inactiveSlideScale={0.9}
      inactiveSlideShift={0}
      initialNumToRender={6}
      invertStickyHeaders={false}
      inverted={false}
      itemWidth={710}
      keyExtractor={[Function]}
      layout="default"
      lockScrollTimeoutDuration={1000}
      lockScrollWhileSnapping={false}
      loop={false}
      loopClonesPerSide={3}
      maxToRenderPerBatch={13}
      onBeforeSnapToItem={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onResponderRelease={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      onTouchEnd={[Function]}
      onTouchStart={[Function]}
      overScrollMode="never"
      pinchGestureEnabled={false}
      removeClippedSubviews={true}
      renderItem={[Function]}
      scrollEnabled={true}
      scrollEventThrottle={1}
      scrollsToTop={false}
      shouldOptimizeUpdates={true}
      showsHorizontalScrollIndicator={false}
      showsVerticalScrollIndicator={false}
      slideStyle={Object {}}
      sliderWidth={710}
      stickyHeaderIndices={Array []}
      style={
        Object {
          "flexDirection": "row",
          "opacity": 0,
          "width": 710,
        }
      }
      swipeThreshold={20}
      useScrollView={false}
      vertical={false}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={13}
    >
      <View>
        <View
          onLayout={[Function]}
          style={
            Array [
              Object {
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <View
            collapsable={false}
            nativeID="animatedComponent"
            pointerEvents="box-none"
            style={
              Object {
                "opacity": 1,
                "transform": Array [
                  Object {
                    "scale": 1,
                  },
                ],
                "width": 710,
              }
            }
          >
            <BVLinearGradient
              colors={
                Array [
                  4280715245,
                  4291457515,
                ]
              }
              endPoint={
                Object {
                  "x": 1,
                  "y": 1,
                }
              }
              locations={null}
              startPoint={
                Object {
                  "x": 0,
                  "y": 0,
                }
              }
              style={
                Array [
                  Object {
                    "borderRadius": 10,
                    "marginTop": 10,
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "space-between",
                    },
                  ]
                }
              >
                <View>
                  <Text
                    color="white"
                    style={
                      Array [
                        Object {
                          "color": "#ffffff",
                          "fontFamily": "SpoqaHanSansNeo-Bold",
                          "fontSize": 16,
                        },
                      ]
                    }
                    weight="bold"
                  >
                    나의 3대 측정
                  </Text>
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "marginTop": 4,
                        },
                      ]
                    }
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "#ffffff",
                            "fontSize": 16,
                          },
                          undefined,
                          Object {
                            "fontFamily": "Material Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      
                    </Text>
                    <Text
                      color="white"
                      size={12}
                      style={
                        Array [
                          Object {
                            "color": "#ffffff",
                            "fontFamily": "SpoqaHanSansNeo-Regular",
                            "fontSize": 12,
                          },
                          Object {
                            "marginLeft": 4,
                          },
                        ]
                      }
                    >
                      21\`11.16
                    </Text>
                  </View>
                </View>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "marginBottom": 40,
                      "marginLeft": 0,
                      "marginRight": 0,
                      "marginTop": 20,
                    },
                  ]
                }
              >
                <Text
                  color="white"
                  style={
                    Array [
                      Object {
                        "color": "#ffffff",
                        "fontFamily": "SpoqaHanSansNeo-Bold",
                        "fontSize": 16,
                      },
                    ]
                  }
                  weight="bold"
                >
                  로그인 한 후에 확인할 수 있어요!
                </Text>
                <View
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  nativeID="animatedComponent"
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "alignItems": "center",
                      "borderColor": "#ffffff",
                      "borderRadius": 8,
                      "borderStyle": "solid",
                      "borderWidth": 1,
                      "justifyContent": "center",
                      "marginTop": 10,
                      "opacity": 1,
                      "paddingBottom": 14,
                      "paddingLeft": 20,
                      "paddingRight": 20,
                      "paddingTop": 14,
                    }
                  }
                >
                  <Text
                    color="white"
                    size={12}
                    style={
                      Array [
                        Object {
                          "color": "#ffffff",
                          "fontFamily": "SpoqaHanSansNeo-Bold",
                          "fontSize": 12,
                        },
                      ]
                    }
                    weight="bold"
                  >
                    로그인 하러가기
                  </Text>
                </View>
              </View>
            </BVLinearGradient>
          </View>
        </View>
      </View>
    </RCTScrollView>
    <View
      style={
        Array [
          Object {
            "marginTop": 40,
          },
        ]
      }
    >
      <Text
        size={16}
        style={
          Array [
            Object {
              "color": "#000000",
              "fontFamily": "SpoqaHanSansNeo-Bold",
              "fontSize": 16,
            },
          ]
        }
        weight="bold"
      >
        오늘의 운동
      </Text>
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "marginTop": 10,
            },
          ]
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={false}
          nativeID="animatedComponent"
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "borderColor": "#ff190c",
              "borderRadius": 13,
              "borderStyle": "solid",
              "borderWidth": 1,
              "height": 26,
              "justifyContent": "center",
              "marginRight": 10,
              "opacity": 1,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "width": 26,
            }
          }
        >
          <Text
            color="error"
            size={16}
            style={
              Array [
                Object {
                  "color": "#ff190c",
                  "fontFamily": "SpoqaHanSansNeo-Bold",
                  "fontSize": 16,
                },
              ]
            }
            weight="bold"
          >
            !
          </Text>
        </View>
        <Text
          style={
            Array [
              Object {
                "color": "#000000",
                "fontFamily": "SpoqaHanSansNeo-Regular",
                "fontSize": 16,
              },
            ]
          }
        >
          오늘 계획한 운동이 없어요
          

          운동을 계획하러 가볼까요?
        </Text>
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          nativeID="animatedComponent"
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#2687ED",
              "borderRadius": 8,
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "marginLeft": 10,
              "opacity": 1,
              "paddingBottom": 14,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 14,
            }
          }
        >
          <Text
            color="white"
            size={16}
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "fontFamily": "SpoqaHanSansNeo-Bold",
                  "fontSize": 16,
                },
              ]
            }
            weight="bold"
          >
            운동 계획하기
          </Text>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;
